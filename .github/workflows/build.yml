name: Verification

on:
  push:
    branches:
      - master
      - main
      - "release?/**"
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
    paths-ignore:
      - "docs/**"
      - "**.md"

  pull_request_target:
    paths:
      - "**/*.ts"
    types: [labeled, opened, synchronize, reopened]

jobs:
  build:
    name: Tests
    runs-on: ubuntu-latest
    env:
      node-version-analysis: 14.x

    strategy:
      matrix:
        # the Node.js versions to build on
        node-version: [10.x, 12.x, 13.x, 14.x]

    steps:
      - name: Checkout PR
        uses: actions/checkout@v2
        if: github.event_name == 'pull_request_target'
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Checkout (others)
        uses: actions/checkout@v2
        if: github.event_name != 'pull_request_target'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build
        env:
          CI: true

      - name: Test the project
        run: npm run test

      - name: Archive reports
        if: ${{ matrix.node-version == env.node-version-analysis }}
        uses: actions/upload-artifact@v2
        with:
          name: reports
          retention-days: 7
          path: |
            coverage/lcov.info
            coverage/clover.xml
            reports/tests.xml

  publish_push:
    name: Publish results (others)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request_target'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get reports
        uses: actions/download-artifact@v2
        with:
          name: reports

      - name: SonarCloud
        uses: SonarSource/sonarcloud-github-action@v1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish Code Coverage (other)
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage/clover.xml
          flags: tests
          fail_ci_if_error: true

  publish_pr:
    name: Publish results (PR)
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request_target' &&
      ( github.event.pull_request.head.repo.full_name == github.repository || contains(github.event.pull_request.labels.*.name, 'run-checks') )
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Get reports
        uses: actions/download-artifact@v2
        with:
          name: reports

      - name: SonarCloud
        uses: SonarSource/sonarcloud-github-action@v1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.pullrequest.provider=github
            -Dsonar.pullrequest.github.repository=${{ github.repository }}
            -Dsonar.pullrequest.github.token.secured=${{ secrets.GITHUB_TOKEN }}
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}

      - name: Publish Code Coverage
        uses: codecov/codecov-action@v1
        if: github.event_name == 'pull_request_target'
        with:
          override_pr: ${{ github.event.number }}
          override_sha: ${{ github.event.pull_request.head.sha }}
          files: ./coverage/clover.xml
          flags: tests
          fail_ci_if_error: true

name: Analyse PR

on:
  workflow_run:
    workflows:
      - Verify
    types:
      - completed

jobs:
  analyze:
    name: Analyze PR
    runs-on: ubuntu-latest
    env:
      artifact-reports: reports
    if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Get PR info
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "${{env.artifact-reports}}"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/reports.zip', Buffer.from(download.data));

      - name: Extract PR info
        id: pr
        run: |
          unzip reports.zip
          for info in pr/* ; do echo ::set-output name=$(basename $info)::$(cat $info); done

      - name: Add check to PR
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          check_id: analysis
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ github.repository }}
          sha: ${{ steps.pr.outputs.head_sha }}
          status: in_progress
          details_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: refs/pull/${{ steps.pr.outputs.number }}/merge

      - name: Get reports
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "${{env.artifact-reports}}"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/reports.zip', Buffer.from(download.data));

      - name: Extract reports
        run: unzip reports.zip

      - name: SonarCloud
        uses: SonarSource/sonarcloud-github-action@v1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.pullrequest.provider=github
            -Dsonar.pullrequest.github.repository=${{ github.repository }}
            -Dsonar.pullrequest.github.token.secured=${{ secrets.GITHUB_TOKEN }}
            -Dsonar.pullrequest.key=${{ steps.pr.outputs.number }}
            -Dsonar.pullrequest.branch=${{ steps.pr.outputs.head_ref }}
            -Dsonar.pullrequest.base=${{ steps.pr.outputs.base_ref }}

      - name: Publish Code Coverage
        uses: codecov/codecov-action@v1
        with:
          override_pr: ${{ steps.pr.outputs.number }}
          override_sha: ${{ steps.pr.outputs.head_sha }}
          files: ./coverage/clover.xml
          flags: tests
          fail_ci_if_error: true

      - name: Add result of check to PR
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          check_id: analysis
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ github.repository }}
          sha: ${{ steps.pr.outputs.head_sha }}
          status: completed
          conclusion: ${{ job.status }}
          details_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
